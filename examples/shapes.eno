gfx/tv .w 2 /
  const center!
0
  let frame!
1 20 /
  let rotation-speed!
0x21 0x2d range
  let colors!
[ ]
  let waves!

midi/route()

fn game()
  cls()

  calculate-point-num()
    let points!
  2 pi() * points /
    let angle-step!

  1 points range
    [[ 1 - angle-step * ]] map
    [[ calculate-vertex() ]] map
    let shape!

  shape draw-shape()

  frame 1 + frame!
end

fn calculate-point-num()
  0 midi/cc()
    10 //
    2 +
end

( angle -- vec{} )
fn calculate-vertex()
  2 midi/cc() let radius!

  frame rotation-speed * +
  [[ cos() radius * center + ]]
  [[ sin() radius * center + ]]
  apply2 vec{}
end

( vec{}[] -- )
fn draw-shape()
  let vecs!
  vecs length 1 -
    let max!
  colors
  1 midi/cc()
    11 //
    get
    let color!

  0 max range [[
    let idx1!
    idx1 max == if? 0 else idx1 1 + end
      let idx2!

    vecs idx1 get
    vecs idx2 get
    color line()
  ]] each
end

( from to value -- value )
fn lerp()
  let value! let to! let from!

  to from - value * from +
end
